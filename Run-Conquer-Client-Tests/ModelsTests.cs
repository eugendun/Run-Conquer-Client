//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using System;

using AssemblyCSharp;
using System.Diagnostics;

namespace RunConquerClientTests
{
    [TestFixture()]
    public class Test
    {
        [Test()]
        public void TestGameInstanceMapAssociation()
        {
            var map = new MapModel();
            var gameInstance = new GameInstanceModel();
            Assert.IsNull(gameInstance.Map);

            gameInstance.Map = map;
            Assert.AreEqual(gameInstance.Map, map);
        }

        [Test()]
        public void TestGameInstancePlayerAssociation()
        {
            var gameInstance = new GameInstanceModel();
            var player_1 = new PlayerModel(1);
            var player_2 = new PlayerModel(2);

            CollectionAssert.IsEmpty(gameInstance.Players);

            gameInstance.Players.Add(player_1);
            CollectionAssert.Contains(gameInstance.Players, player_1);
            CollectionAssert.DoesNotContain(gameInstance.Players, player_2);

            Assert.AreEqual(gameInstance, player_1.GameInstance);
            Assert.AreNotEqual(gameInstance, player_2.GameInstance);

            gameInstance.Players.Remove(player_1);
            CollectionAssert.DoesNotContain(gameInstance.Players, player_1);
        }

        [Test()]
        public void TestTeamPlayerAssociation()
        {
            var team_1 = new TeamModel(1);
            var team_2 = new TeamModel(2);
            var player_1 = new PlayerModel(1);
            var player_2 = new PlayerModel(2);

            CollectionAssert.IsEmpty(team_1.Players);
            CollectionAssert.IsEmpty(team_2.Players);
            Assert.IsNull(player_1.Team);
            Assert.IsNull(player_2.Team);

            team_1.Players.Add(player_1);
            CollectionAssert.Contains(team_1.Players, player_1);
            
            team_1.Players.Remove(player_1);
            CollectionAssert.DoesNotContain(team_1.Players, player_1);

            team_2.Players.Add(player_1);
            CollectionAssert.Contains(team_2.Players, player_1);

            team_1.Players.Add(player_1);
            CollectionAssert.Contains(team_1.Players, player_1);
            CollectionAssert.DoesNotContain(team_2.Players, player_1);

            team_1.Players.Add(player_2);
            CollectionAssert.Contains(team_1.Players, player_2);

            team_1.Players.Clear();
            CollectionAssert.DoesNotContain(team_1.Players, player_1);
            CollectionAssert.DoesNotContain(team_1.Players, player_2);
            Assert.IsNull(player_1.Team);
            Assert.IsNull(player_2.Team);

            player_1.Team = team_1;
            Assert.AreEqual(team_1, player_1.Team);
            CollectionAssert.Contains(team_1.Players, player_1);

            player_1.Team = team_2;
            Assert.AreEqual(player_1.Team, team_2);
            CollectionAssert.Contains(team_2.Players, player_1);
            CollectionAssert.DoesNotContain(team_1.Players, player_1);
        }

        [Test()]
        public void TestGameInstanceTeamAssociation()
        {
            var gameInstance = new GameInstanceModel();
            var team_1 = new TeamModel(1);
            var team_2 = new TeamModel(2);

            CollectionAssert.IsEmpty(gameInstance.Teams);
            Assert.IsNull(team_1.GameInstance);
            Assert.IsNull(team_2.GameInstance);

            gameInstance.Teams.Add(team_1);
            Assert.AreEqual(gameInstance, team_1.GameInstance);
            CollectionAssert.Contains(gameInstance.Teams, team_1);

            gameInstance.Teams.Remove(team_1);
            Assert.IsNull(team_1.GameInstance);
            CollectionAssert.DoesNotContain(gameInstance.Teams, team_1);

            team_2.GameInstance = gameInstance;
            Assert.AreEqual(gameInstance, team_2.GameInstance);
            CollectionAssert.Contains(gameInstance.Teams, team_2);

            gameInstance.Teams.Clear();
            Assert.IsNull(team_2.GameInstance);
            CollectionAssert.IsEmpty(gameInstance.Teams);
        }

        [Test()]
        public void TestDeserializationGameInstance()
        {

        }
    }
}

